// Code generated by "packer-sdc mapstructure-to-hcl2"; DO NOT EDIT.

package main

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName     *string             `mapstructure:"packer_build_name" cty:"packer_build_name" hcl:"packer_build_name"`
	PackerBuilderType   *string             `mapstructure:"packer_builder_type" cty:"packer_builder_type" hcl:"packer_builder_type"`
	PackerCoreVersion   *string             `mapstructure:"packer_core_version" cty:"packer_core_version" hcl:"packer_core_version"`
	PackerDebug         *bool               `mapstructure:"packer_debug" cty:"packer_debug" hcl:"packer_debug"`
	PackerForce         *bool               `mapstructure:"packer_force" cty:"packer_force" hcl:"packer_force"`
	PackerOnError       *string             `mapstructure:"packer_on_error" cty:"packer_on_error" hcl:"packer_on_error"`
	PackerUserVars      map[string]string   `mapstructure:"packer_user_variables" cty:"packer_user_variables" hcl:"packer_user_variables"`
	PackerSensitiveVars []string            `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables" hcl:"packer_sensitive_variables"`
	
	Type                *string             `mapstructure:"communicator" cty:"communicator" hcl:"communicator"`
	PauseBeforeConnect  *string             `mapstructure:"pause_before_connecting" cty:"pause_before_connecting" hcl:"pause_before_connecting"`
	SSHHost             *string             `mapstructure:"ssh_host" cty:"ssh_host" hcl:"ssh_host"`
	SSHPort             *int                `mapstructure:"ssh_port" cty:"ssh_port" hcl:"ssh_port"`
	SSHUsername         *string             `mapstructure:"ssh_username" cty:"ssh_username" hcl:"ssh_username"`
	SSHPassword         *string             `mapstructure:"ssh_password" cty:"ssh_password" hcl:"ssh_password"`
	SSHTimeout          *string             `mapstructure:"ssh_timeout" cty:"ssh_timeout" hcl:"ssh_timeout"`
	
	MedaBinary          *string             `mapstructure:"meda_binary" cty:"meda_binary" hcl:"meda_binary"`
	MedaHost            *string             `mapstructure:"meda_host" cty:"meda_host" hcl:"meda_host"`
	MedaPort            *int                `mapstructure:"meda_port" cty:"meda_port" hcl:"meda_port"`
	UseAPI              *bool               `mapstructure:"use_api" cty:"use_api" hcl:"use_api"`
	VMName              *string             `mapstructure:"vm_name" cty:"vm_name" hcl:"vm_name"`
	BaseImage           *string             `mapstructure:"base_image" cty:"base_image" hcl:"base_image"`
	Memory              *string             `mapstructure:"memory" cty:"memory" hcl:"memory"`
	CPUs                *int                `mapstructure:"cpus" cty:"cpus" hcl:"cpus"`
	DiskSize            *string             `mapstructure:"disk_size" cty:"disk_size" hcl:"disk_size"`
	UserDataFile        *string             `mapstructure:"user_data_file" cty:"user_data_file" hcl:"user_data_file"`
	OutputImageName     *string             `mapstructure:"output_image_name" cty:"output_image_name" hcl:"output_image_name"`
	OutputTag           *string             `mapstructure:"output_tag" cty:"output_tag" hcl:"output_tag"`
	Registry            *string             `mapstructure:"registry" cty:"registry" hcl:"registry"`
	Organization        *string             `mapstructure:"organization" cty:"organization" hcl:"organization"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"packer_build_name":          &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"packer_builder_type":        &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"packer_core_version":        &hcldec.AttrSpec{Name: "packer_core_version", Type: cty.String, Required: false},
		"packer_debug":               &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"packer_force":               &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"packer_on_error":            &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"packer_user_variables":      &hcldec.AttrSpec{Name: "packer_user_variables", Type: cty.Map(cty.String), Required: false},
		"packer_sensitive_variables": &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		
		"communicator":               &hcldec.AttrSpec{Name: "communicator", Type: cty.String, Required: false},
		"pause_before_connecting":    &hcldec.AttrSpec{Name: "pause_before_connecting", Type: cty.String, Required: false},
		"ssh_host":                   &hcldec.AttrSpec{Name: "ssh_host", Type: cty.String, Required: false},
		"ssh_port":                   &hcldec.AttrSpec{Name: "ssh_port", Type: cty.Number, Required: false},
		"ssh_username":               &hcldec.AttrSpec{Name: "ssh_username", Type: cty.String, Required: false},
		"ssh_password":               &hcldec.AttrSpec{Name: "ssh_password", Type: cty.String, Required: false},
		"ssh_timeout":                &hcldec.AttrSpec{Name: "ssh_timeout", Type: cty.String, Required: false},
		
		"meda_binary":                &hcldec.AttrSpec{Name: "meda_binary", Type: cty.String, Required: false},
		"meda_host":                  &hcldec.AttrSpec{Name: "meda_host", Type: cty.String, Required: false},
		"meda_port":                  &hcldec.AttrSpec{Name: "meda_port", Type: cty.Number, Required: false},
		"use_api":                    &hcldec.AttrSpec{Name: "use_api", Type: cty.Bool, Required: false},
		"vm_name":                    &hcldec.AttrSpec{Name: "vm_name", Type: cty.String, Required: true},
		"base_image":                 &hcldec.AttrSpec{Name: "base_image", Type: cty.String, Required: true},
		"memory":                     &hcldec.AttrSpec{Name: "memory", Type: cty.String, Required: false},
		"cpus":                       &hcldec.AttrSpec{Name: "cpus", Type: cty.Number, Required: false},
		"disk_size":                  &hcldec.AttrSpec{Name: "disk_size", Type: cty.String, Required: false},
		"user_data_file":             &hcldec.AttrSpec{Name: "user_data_file", Type: cty.String, Required: false},
		"output_image_name":          &hcldec.AttrSpec{Name: "output_image_name", Type: cty.String, Required: true},
		"output_tag":                 &hcldec.AttrSpec{Name: "output_tag", Type: cty.String, Required: false},
		"registry":                   &hcldec.AttrSpec{Name: "registry", Type: cty.String, Required: false},
		"organization":               &hcldec.AttrSpec{Name: "organization", Type: cty.String, Required: false},
	}
	return s
}