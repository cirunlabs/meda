name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install qemu-utils genisoimage iptables jq -y
        sudo apt-get install sshpass
    - name: Give the runner user rw access to /dev/kvm
      run: sudo setfacl -m u:${USER}:rw /dev/kvm
    - name: List VMs
      run: RUST_LOG=info cargo run -- list
    - name: Create VM
      run: |
        RUST_LOG=info cargo run -- create ubuntu
        sleep 10
    - name: SSH into the VM with retries
      run: |
        ip=$(target/debug/meda list --json | jq -r '.[0].ip')
        echo "Connecting to IP: $ip"
    
        max_retries=10
        delay=3
        success=0
    
        for i in $(seq 1 $max_retries); do
          echo "Attempt $i to SSH into $ip..."
          sshpass -p 'cirun' ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 cirun@$ip "echo 'SSH successful'" && success=1 && break
          echo "SSH attempt $i failed, retrying in $delay seconds..."
          sleep $delay
        done
    
        if [ $success -ne 1 ]; then
          echo "SSH failed after $max_retries attempts"
          exit 1
        fi
    - name: Cloud Hypervisor logs
      if: always()
      run: cat /home/runner/.ch-vms/vms/ubuntu/ch.log
    - name: List VM
      run: RUST_LOG=info cargo run -- list
    - name: Get VM
      run: RUST_LOG=info cargo run -- get ubuntu
    - name: Stop VM
      run: |
        sudo setfacl -m u:${USER}:rw /dev/kvm
        RUST_LOG=info cargo run -- stop ubuntu
    - name: Start VM
      run: |
        sudo setfacl -m u:${USER}:rw /dev/kvm
        RUST_LOG=info cargo run -- start ubuntu
    - name: Delete VM
      run: |
        sudo setfacl -m u:${USER}:rw /dev/kvm
        RUST_LOG=info cargo run -- delete ubuntu
